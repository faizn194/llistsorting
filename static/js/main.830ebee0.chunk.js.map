{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","data","React","useMemo","id","name","age","DOB","columns","Header","accessor","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"wMAsFeA,MAnFf,WACE,IAAMC,EAAOC,IAAMC,SACjB,iBAAM,CACJ,CAACC,GAAI,EAAGC,KAAM,SAASC,IAAK,GAAGC,IAAK,MACpC,CAACH,GAAI,EAAEC,KAAM,MAAMC,IAAK,GAAGC,IAAK,MAChC,CAACH,GAAI,EAAEC,KAAM,OAAOC,IAAK,GAAGC,IAAK,MACjC,CAACH,GAAI,EAAEC,KAAM,QAAQC,IAAK,GAAGC,IAAK,MAClC,CAACH,GAAI,EAAEC,KAAM,QAAQC,IAAK,GAAGC,IAAK,SAEpC,IAGIC,EAAUN,IAAMC,SACpB,iBAAM,CAEJ,CACEM,OAAQ,KACRC,SAAU,MAEZ,CACED,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,MACRC,SAAU,OAEZ,CACED,OAAQ,gBACRC,SAAU,UAGd,IAGF,EAMIC,mBAAS,CAAEH,UAASP,QACtBW,aANAC,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,WAIF,OACE,kDAAWJ,KAAX,cACE,gCACGE,EAAaG,KAAI,SAAAC,GAAW,OAC3B,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,+CACMA,EAAOC,eAAeD,EAAOE,yBADnC,cAEGF,EAAOG,OAAO,UACf,+BACGH,EAAOI,UAAYJ,EAAOK,aAAe,IAAW,oBAOjE,iDAAWb,KAAX,aACGE,EAAKE,KAAI,SAAAU,GAER,OADAX,EAAWW,GAET,8CAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMZ,KAAI,SAAAa,GACb,OACE,8CACMA,EAAKC,gBADX,aAGGD,EAAKN,OAAO,4BC9DlBQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASjB,OACP,cAAC,IAAMkB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.830ebee0.chunk.js","sourcesContent":["import React from 'react';\nimport { useTable, useSortBy } from 'react-table'\n\nfunction App() {\n  const data = React.useMemo(\n    () => [\n      {id: 1, name: 'Faizan',age: 22,DOB: 1996},\n      {id: 2,name: 'Ali',age: 19,DOB: 2001},\n      {id: 3,name: 'Umer',age: 53,DOB: 1999},\n      {id: 4,name: 'Ahsan',age: 25,DOB: 2010},\n      {id: 5,name: 'Bilal',age: 15,DOB: 2005},\n    ],\n    []\n  )\n\n  const columns = React.useMemo(\n    () => [\n\n      {\n        Header: 'ID',\n        accessor: 'id',\n      },\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'age',\n        accessor: 'age',\n      },\n      {\n        Header: 'Date of Birth',\n        accessor: 'DOB',\n      },\n    ],\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data },\n    useSortBy)\n\n  return (\n    <table {...getTableProps()} >\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th\n                {...column.getHeaderProps(column.getSortByToggleProps())} >\n                {column.render('Header')}\n                <span>\n                  {column.isSorted ? (column.isSortedDesc ? '' : '') : ''}\n                </span>\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map(row => {\n          prepareRow(row)\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return (\n                  <td\n                    {...cell.getCellProps()}\n                  >\n                    {cell.render('Cell')}\n                  </td>\n                )\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}